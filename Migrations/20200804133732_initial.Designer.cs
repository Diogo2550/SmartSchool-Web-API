// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SmartSchool_WebAPI.Data;

namespace SmartSchool_WebAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200804133732_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SmartSchool_WebAPI.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LastName = "Alves",
                            Name = "Diogo",
                            PhoneNumber = "857193485"
                        },
                        new
                        {
                            Id = 2,
                            LastName = "Gonçalves",
                            Name = "Alice",
                            PhoneNumber = "425879635"
                        },
                        new
                        {
                            Id = 3,
                            LastName = "Santos",
                            Name = "Rodrigo",
                            PhoneNumber = "975813495"
                        },
                        new
                        {
                            Id = 4,
                            LastName = "Malhado",
                            Name = "Mayall",
                            PhoneNumber = "679185425"
                        },
                        new
                        {
                            Id = 5,
                            LastName = "Pompeu",
                            Name = "Angelo",
                            PhoneNumber = "579281648"
                        },
                        new
                        {
                            Id = 6,
                            LastName = "Figueiredo",
                            Name = "Myllene",
                            PhoneNumber = "948759168"
                        },
                        new
                        {
                            Id = 7,
                            LastName = "Maravilha",
                            Name = "Thammy",
                            PhoneNumber = "486792183"
                        },
                        new
                        {
                            Id = 8,
                            LastName = "Souza",
                            Name = "Jamilly",
                            PhoneNumber = "684973812"
                        });
                });

            modelBuilder.Entity("SmartSchool_WebAPI.Models.StudentSubject", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.Property<int>("SubjectId")
                        .HasColumnType("integer");

                    b.HasKey("StudentId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("StudentSubjects");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            SubjectId = 2
                        },
                        new
                        {
                            StudentId = 1,
                            SubjectId = 3
                        },
                        new
                        {
                            StudentId = 1,
                            SubjectId = 5
                        },
                        new
                        {
                            StudentId = 2,
                            SubjectId = 1
                        },
                        new
                        {
                            StudentId = 2,
                            SubjectId = 2
                        },
                        new
                        {
                            StudentId = 2,
                            SubjectId = 3
                        },
                        new
                        {
                            StudentId = 2,
                            SubjectId = 6
                        },
                        new
                        {
                            StudentId = 3,
                            SubjectId = 2
                        },
                        new
                        {
                            StudentId = 3,
                            SubjectId = 4
                        },
                        new
                        {
                            StudentId = 4,
                            SubjectId = 3
                        },
                        new
                        {
                            StudentId = 5,
                            SubjectId = 3
                        },
                        new
                        {
                            StudentId = 5,
                            SubjectId = 2
                        },
                        new
                        {
                            StudentId = 6,
                            SubjectId = 1
                        },
                        new
                        {
                            StudentId = 6,
                            SubjectId = 4
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 1
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 2
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 3
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 4
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 5
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 6
                        },
                        new
                        {
                            StudentId = 8,
                            SubjectId = 2
                        },
                        new
                        {
                            StudentId = 8,
                            SubjectId = 3
                        });
                });

            modelBuilder.Entity("SmartSchool_WebAPI.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("TeacherId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Programção Avançada",
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Matemática",
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Português",
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Técnicas de Programação",
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 5,
                            Name = "Arquitetura de Computadores",
                            TeacherId = 5
                        },
                        new
                        {
                            Id = 6,
                            Name = "Web",
                            TeacherId = 1
                        });
                });

            modelBuilder.Entity("SmartSchool_WebAPI.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Teacher");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Diogo"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Felipe"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Valentim"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Marcos"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Dálvio"
                        });
                });

            modelBuilder.Entity("SmartSchool_WebAPI.Models.StudentSubject", b =>
                {
                    b.HasOne("SmartSchool_WebAPI.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool_WebAPI.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartSchool_WebAPI.Models.Subject", b =>
                {
                    b.HasOne("SmartSchool_WebAPI.Models.Teacher", "Teacher")
                        .WithMany("Subject")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
